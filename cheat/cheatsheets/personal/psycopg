https://www.psycopg.org/psycopg3/docs/api/


# class_row
from dataclasses import dataclass
import psycopg
from psycopg.rows import class_row

@dataclass
class Person:
    first_name: str
    last_name: str
    age: int = None

conn = psycopg.connect()
cur = conn.cursor(row_factory=class_row(Person))

cur.execute("select 'John' as first_name, 'Smith' as last_name").fetchone()
# Person(first_name='John', last_name='Smith', age=None)


# https://www.psycopg.org/psycopg3/docs/basic/params.html#query-parameters

cur.execute("""
    INSERT INTO some_table (id, created_at, updated_at, last_name)
    VALUES (%(id)s, %(created)s, %(created)s, %(name)s);
    """,
    {'id': 10, 'name': "O'Reilly", 'created': datetime.date(2020, 11, 18)})

cur.execute("SELECT (%s %% 2) = 0 AS even", (10,))



# https://www.psycopg.org/psycopg3/docs/basic/adapt.html
Python `date` objects are converted to PostgreSQL date.
Python `datetime` objects are converted to PostgreSQL timestamp (if they don’t have a tzinfo set) or timestamptz (if they do).
Python `time`objects are converted to PostgreSQL time (if they don’t have a tzinfo set) or timetz (if they do).
Python `timedelta` objects are converted to PostgreSQL interval.

Python `uuid.UUID` objects are adapted to PostgreSQL UUID type and back:
