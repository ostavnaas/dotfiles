##TCP FLAGS##

TCP Packets
src > dst: Flags [tcpflags], seq data-seqno, ack ackno, win window, urg urgent, options [opts], length len

[tcpflags]
S (SYN)
F (FIN)
P (PUSH)
R (RST)
U (URG)
W (ECN CWR)
E (ECN-Echo) 
. (ACK)
none (no flags set)

tcpdump -i eth0 port 443


# Write the raw packets to file
tcpdump -i eth0 -n -v -w /tmp/tcpdump.pcap

# To or/and from
tcpdump host 1.2.3.4
tcpdump src 2.3.4.5 
tcpdump dst 3.4.5.6
tcpdump net 1.2.3.0/24

# Protocols tcp, udp, icmp
tcpdump icmp


Show all URG packets:
# tcpdump 'tcp[13] & 32 != 0'

Show all ACK packets:
# tcpdump 'tcp[13] & 16 != 0'

Show all PSH packets:
# tcpdump 'tcp[13] & 8 != 0'

Show all RST packets:
# tcpdump 'tcp[13] & 4 != 0'

Show all SYN packets:
# tcpdump 'tcp[13] & 2 != 0'

Show all FIN packets:
# tcpdump 'tcp[13] & 1 != 0'

Show all SYN-ACK packets:
# tcpdump 'tcp[13] = 18'

Show icmp echo request and reply
#tcpdump -n icmp and 'icmp[0] != 8 and icmp[0] != 0'

Show all IP packets with a non-zero TOS field (one byte TOS field is at offset 1 in IP header):
# tcpdump -v -n ip and ip[1]!=0

Show all IP packets with TTL less than some value (on byte TTL field is at offset 8 in IP header):
# tcpdump -v ip and 'ip[8]<2'

Show TCP SYN packets:
# tcpdump -n tcp and port 80 and 'tcp[tcpflags] & tcp-syn == tcp-syn'
# tcpdump tcp and port 80 and 'tcp[tcpflags] == tcp-syn'
# tcpdump -i <interface> "tcp[tcpflags] & (tcp-syn) != 0"

Show TCP ACK packets:
# tcpdump -i <interface> "tcp[tcpflags] & (tcp-ack) != 0"

Show TCP SYN/ACK packets (typically, responses from servers):
# tcpdump -n tcp and 'tcp[tcpflags] & (tcp-syn|tcp-ack) == (tcp-syn|tcp-ack)'
# tcpdump -n tcp and 'tcp[tcpflags] & tcp-syn == tcp-syn' and 'tcp[tcpflags] & tcp-ack == tcp-ack'
# tcpdump -i <interface> "tcp[tcpflags] & (tcp-syn|tcp-ack) != 0"

Show TCP FIN packets:
# tcpdump -i <interface> "tcp[tcpflags] & (tcp-fin) != 0"

Show ARP Packets with MAC address
# tcpdump -vv -e -nn ether proto 0x0806

Show packets of a specified length (IP packet length (16 bits) is located at offset 2 in IP header):
# tcpdump -l icmp and '(ip[2:2]>50)' -w - |tcpdump -r - -v ip and '(ip[2:2]<60)'

More Details: 
http://danielmiessler.com/study/tcpdump/


# Capture all traffic going to and from 10.0.2.1 on eth0
tcpdump -i eth0 host 10.0.2.1
#
# # Capture traffic with src or dst
tcpdump src 10.0.2.1
tcpdump dst 10.0.2.1
#
# # Write to pcap file
tcpdump -i eth0 -s0 -w test.pcap
#
# # Protocol and port
tcpdump udp and port 53
#
# # Merge muliple pcap files
mergecap -a file_1.pcap file_1.pcap file_1.cap -w output_file.pcap
#
# # Write 1M before move to next and loop trough 5 files
tcpdump -C 1 -Z root -W 5 -w output.pcap
#
# # TLS version
# https://www.netmeister.org/blog/tcpdump-ssl-and-tls.html
#
