
# Generate new GPG key
gpg --full-generate-key

# Export public key
gpg --output public.pgp --armor --export username@exapmle.com

# Export Private key
gpg --output private.pgp --armor --export-secret-key username@example.com

# List private keys
gpg --list-secret-keys --keyid-format=long

# List public keys
gpg --list-keys --keyid-format long

# show public key ID that it was encrypted with
gpg --pinentry-mode cancel --list-packets file.gpg

# https://davesteele.github.io/gpg/2014/09/20/anatomy-of-a-gpg-key/
+-------+----------------+------------------------------+
| Flag  | gpg character  |         Description          |
+-------+----------------+------------------------------+
| 0x01  | “C”            | Key Certification            |
| 0x02  | “S”            | Sign Data                    |
| 0x04  | “E”            | Encrypt Communications       |
| 0x08  | “E”            | Encrypt Storage              |
| 0x10  |                | Split key                    |
| 0x20  | “A”            | Authentication               |
| 0x80  |                | Held by more than one person |
+-------+----------------+------------------------------+


# Renew GPG key and subkeys
# https://whynothugo.nl/journal/2023/07/13/extending-an-expired-gpg-key/
gpg --quick-set-expire < KEY FINGERPRINT > 1y

gpg --list-secret-keys --verbose --with-subkey-fingerprints

sec>  rsa4096 2022-08-01 [SC] [expires: 2025-09-18]
      < KEY FINGERPRINT >
      Card serial no. = xxxx xxxxxxxx
uid           [ultimate] <USER> <EMAIL>
ssb>  rsa4096 2022-08-01 [E] [expires: 2025-09-18]
      < SUBKEY FINGERPRINT >
        Card serial no. = xxxx xxxxxxxx

gpg --quick-set-expire < KEY FINGERPRINT >  1y  < SUBKEY FINGERPRINT >...


